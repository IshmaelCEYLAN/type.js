(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))i(n);new MutationObserver(n=>{for(const o of n)if(o.type==="childList")for(const s of o.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&i(s)}).observe(document,{childList:!0,subtree:!0});function r(n){const o={};return n.integrity&&(o.integrity=n.integrity),n.referrerPolicy&&(o.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?o.credentials="include":n.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(n){if(n.ep)return;n.ep=!0;const o=r(n);fetch(n.href,o)}})();function tag(e){return Object.prototype.toString.call(e)}function args(e){return tag(e)=="[object Array]"?e:Array.prototype.slice.call(e)}function rename(e,t,r){var i={};for(var n in e){var o=e[n];n in t?(i[t[n]]=o,r!==!0&&(i[n]=o)):i[n]=o}return i}function closured(e,t,r){var i=e.toString().trim(),n=/^(?!function)[\w$@]+\s*\(.*?\)\s*\{/.test(i);return Function(Object.keys(t),"return "+(n?"function ":"")+i+(r?`
//# sourceURL=`+r:"")).apply(void 0,Object.values(t))}function tagName(e){return tag(e).replace(/\[object (.*?)\]/,"$1")}function typeNames(e){var t=[];for(var r of e)r&&r.prototype&&r.prototype.constructor&&r.prototype.constructor.name?t.push(r.prototype.constructor.name):r===void 0?t.push("undefined"):r===null&&t.push("null");return t}function getArguments(e){var t=e.trim().match(/^(?:async\s+)?(?:function\s+[\w@$]+\s*\((.*?)\)\s*{|function\s*\((.*?)\)\s*{|[\w@$]+\s*\((.*?)\)\s*{|\(?(.*?)\)?\s*=>{?)/),r=t[1]||t[2]||t[3]||t[4];r=r?r.trim().split(","):[];for(var i=0;i<r.length;i++)r[i]=r[i].trim();return r}function readableJoin(e){if(e.length===0)return"";if(e.length===1)return e[0];if(e.length===2)return e.join(" or ");var t=e.pop();return e.join(", ")+" or "+t}function getPrototypeOf(e){return"getPrototypeOf"in Object?Object.getPrototypeOf(e):e.__proto__}function setPrototypeOf(e,t){return"setPrototypeOf"in Object?(Object.setPrototypeOf(e,t),t):e.__proto__=t}class MissingPropError extends Error{constructor(t,r,i){super(),this.name="MissingPropError",this.message=`The ${t.name} interface requires to define ${i.name} property on ${r.name} type.`}}class ReturnTypeMismatch extends Error{constructor(t,r,i,n){super(),this.name="ReturnTypeMismatch",this.message=`${t.name} interface requires ${r.name}.${i.name} method return ${readableJoin(typeNames(i.returnTypes)).toLowerCase()} but returned ${tagName(n).toLowerCase()}.`}}class MissingMethodError extends Error{constructor(t,r,i){super(),this.name="MissingMethodError",this.message=`The ${t.name} interface requires to define ${i.name} method on ${r.name} type.`}}class MissingArgumentError extends Error{constructor(t,r,i,n,o){super(),this.name="MissingArgumentError",this.message=`${t.name} interface requires ${r.name}.${i.name} method's ${o}st argument ("${n.name}") defined.`}}class ArgumentTypeMismatch extends Error{constructor(t,r,i,n,o,s){super(),this.name="ArgumentTypeMismatch",this.iface=t,this.type=r,this.methodRule=i,this.argRule=n,this.position=o,this.value=s,this.message=n.types.length===0?this.argumentShouldPassMessage():this.argumentTypeMismatchMessage()}argumentTypeMismatchMessage(){return`${this.iface.name} interface requires ${this.type.name}.${this.methodRule.name} method's ${this.position}st argument (#${this.argRule.name}) must be ${readableJoin(typeNames(this.argRule.types)).toLowerCase()} but received ${tagName(this.value).toLowerCase()}.`}argumentShouldPassMessage(){return`The ${this.iface.name} interface prevents calling the ${this.type.name}.${this.methodRule.name} method without defining the ${this.position}th argument (#${this.argRule.name}).`}}class PropTypeMismatchError extends TypeError{constructor(t,r,i,n){super(),this.name="PropTypeMismatchError",this.message=`${t.name} interface requires the ${r.name}.${i.name} property should ${readableJoin(typeNames(i.types))} but the property is ${tagName(n)}.`}}class PropAssignTypeMismatchError extends TypeError{constructor(t,r,i,n){super(),this.name="PropAssignTypeMismatchError",this.message=`${t.name} interface requires the ${r.name}.${i.name} property should get ${readableJoin(typeNames(i.types))} but attempted to assign ${tagName(n)}.`}}function Interface(e,t){if(!(this instanceof Interface))return new Interface(e,t);var r=new Builder;t&&t(r),this.name=e,this.properties=r.properties,this.methods=r.methods,this.interfaces=[this],this.apply=function(s){i.call(this,s),o.call(this,s)},this.extends=function(){var s=args(arguments);for(var h of s)Object.defineProperties(this.methods,Object.getOwnPropertyDescriptors(h.methods)),Object.defineProperties(this.properties,Object.getOwnPropertyDescriptors(h.properties)),this.interfaces.push(h);return this},this.prototype=function(s){return s(r),this},this.is=function(s){for(var h of this.interfaces)if(h===s)return!0;return!1};function i(s){for(var h in this.properties){var a=this.properties[h],u=a.name,c=a.types,y=a.isRequired,m=u in s.properties,l=s.properties[u],p=c.length>0;if(y&&!m)throw new MissingPropError(this,s,a);if(m&&p&&!allowed(l,c))throw new PropTypeMismatchError(this,s,a,l);p&&n(this,s,a)}}function n(s,h,a){var u="__proxifiedProperties__";h.properties["$proxified_"+a.name]=h.properties[a.name],Object.defineProperty(h.properties,a.name,{get:function(){return this[u][a.name]},set:function(c){if(!allowed(c,a.types))throw new PropAssignTypeMismatchError(s,h,a,c);this[u][a.name]=c}})}function o(s){for(var h in this.methods){let v=function(){for(var $=$args(arguments),f=0;f<$methodRule.arguments.length;f++){var d=$methodRule.arguments[f],A=d.isRequired,P=d.defaultValue,g=$[f];d.name,$definedArgs[f];var M=d.types,E=M.length>0;if(A&&g===void 0)if(P!==void 0)$[f]=g=P;else throw new $ArgumentTypeMismatch($iface,$type,$methodRule,d,f);else if(E&&!$allowed(g,M))throw new $ArgumentTypeMismatch($iface,$type,$methodRule,d,f,g)}var b=$proxifiedMethod.apply(this,$);if($returns.length>0&&!$allowed(b,$returns))throw new $ReturnTypeMismatch($iface,$type,$methodRule,b);return b};var B=v,a=this.methods[h],u=a.name,c=s.methods[u],y=u in s.methods,m=getArguments(c.toString()),l=a.returnTypes;if(!y)throw new MissingMethodError(this,s,a);for(var p=0;p<a.arguments.length;p++){var w=a.arguments[p],O=m[p],T=w.isRequired;if(T&&O===void 0)throw new MissingArgumentError(this,s,a,w,p)}var C=s.methods[u];v.dependencies={$args:args,$type:s,$iface:this,$returns:l,$allowed:allowed,$methodRule:a,$definedArgs:m,$proxifiedMethod:C,$ReturnTypeMismatch:ReturnTypeMismatch,$ArgumentTypeMismatch:ArgumentTypeMismatch},s.methods[u]=v}}}function allowed(e,t){for(var r of t)if(tagName(e)==r.prototype.constructor.name)return!0;return!1}function Builder(){this.properties={},this.methods={}}Builder.prototype.property=function(e,t){return this.properties[e]=new Property(e,t)};Builder.prototype.method=function(e,t){t(this.methods[e]=new Method(e))};function Property(e,t){this.name=e,this.isRequired=!1,this.types=[],t&&this.allows(t)}Property.prototype.required=function(){return this.isRequired=!0,this};Property.prototype.allows=function(e){return this.types=tagName(e)=="Array"?e:[e],this};function Method(e){this.name=e,this.arguments=[],this.returnTypes=[]}Method.prototype.argument=function(e,t){var r=new Argument(e);return r.allows(t),this.arguments.push(r),r};Method.prototype.returns=function(e){this.returnTypes=tagName(e)=="Array"?e:e===void 0?[]:[e]};function Argument(e){this.name=e,this.types=[],this.isRequired=!1,this.defaultValue=void 0}Argument.prototype.allows=function(e){this.types=tagName(e)=="Array"?e:e===void 0?[]:[e]};Argument.prototype.required=function(){return this.isRequired=!0,this};Argument.prototype.default=function(e){return this.defaultValue=e,this};function Type(name){if(!(this instanceof Type))return new Type(name);if(typeof name!="string"||/^[a-z_$]{1}[a-z0-9_$]*$/i.test(name)===!1)throw TypeError("In order to create a type, you need to provide a valid value as a string in the first parameter, which can also be a function name!");this.name=name,this.parent=null,this.types=[name],this.traits=[],this.interfaces=[],this.constructor=eval("( function "+name+"(){})"),this.methods={},this.properties={},this.prototype=function(e){for(var t in e){var r=e[t];this[r instanceof Function?"methods":"properties"][t]=r}for(var i of this.interfaces)i.apply(this);return this},this.extends=function(e){return this.parent=e,this.types=this.types.concat(e.types),this.traits=this.traits.concat(e.traits),this},this.implements=function(){return this.interfaces=args(arguments),this},this.use=function(e,t){return this.prototype(t?rename(e.properties,t,!0):e.properties),this.traits=this.traits.concat(e.traits),this},this.create=function(){var e=this,t=new this.constructor,r=this.getProperties();if(Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)),this.parent)for(var i=this,n=setPrototypeOf(t,{});i;){defineTypeMember(n,"constructor",i.constructor);for(var o in i.methods)defineTypeMember(n,o,bindMagicalParentWord(this,i,o,t,n));if(i.parent)n=setPrototypeOf(n,{}),i=i.parent;else break}for(var s in this.methods)getPrototypeOf(t)[s]=bindMagicalParentWord(this,this,s,t,t);n=setPrototypeOf(n,{});var h="__proxifiedProperties__";for(var s in t){var a=s.substr(0,11);if(a=="$proxified_"){var u=s.replace(a,"");h in n||defineTypeMember(n,h,{}),n[h][u]=t[s],delete t[s]}}return defineTypeMember(n,"is",function(c){return e.is(c)}),defineTypeMember(n,"behave",function(c){return e.traits.indexOf(c.name)>-1}),defineTypeMember(n,"constructor",Type),"construct"in t&&t.construct.apply(t,args(arguments)),t},this.getProperties=function(){var e={};return this.parent&&Object.defineProperties(e,Object.getOwnPropertyDescriptors(this.parent.getProperties())),Object.defineProperties(e,Object.getOwnPropertyDescriptors(this.properties)),e},this.is=function(e){if(e instanceof Type)return this.types.indexOf(e.name)>-1;if(e instanceof Interface){var t=!1,r=this;e:for(;r;){for(var i of r.interfaces)if(i.is(e)){t=!0;break e}r=r.parent}return t}throw new TypeError("The is method expects Type or Interface as the first argument to test relation.")}}function parentalAccess(e,t,r,i,n,o,s){if((e=e.parent)===null)throw new ReferenceError("The "+t.name+" is a type that does not extend another type, the parent method cannot be used in the "+r+" method.");var h=getPrototypeOf(n);if(i===n&&(h=getPrototypeOf(h),e=e.parent),o===void 0&&(o=r),o in h)return h[o].apply(i,s);throw getPrototypeOf(h)===null?new ReferenceError('"parent" method was used illegally in '+e.parent.name+"."+r+" method. Within the root types, using parent method is ineffective."):new ReferenceError("The parent method used in "+t.name+"."+r+" tried to access method "+o+", which is not defined in type "+t.parent.name+"!")}function bindMagicalParentWord(e,t,r,i,n){var o=t.name+"."+r,s=t.methods[r],h={parent:function(u,c){return tagName(u)=="Array"&&(c=u,u=void 0),parentalAccess(e,t,r,i,n,u,c)}};if(s.dependencies)for(var a in s.dependencies)h[a]=s.dependencies[a];return closured(s,h,o)}function defineTypeMember(e,t,r){Object.defineProperty(e,t,{value:r,writable:!0,configurable:!0,enumerable:!1})}function Trait(e){if(!(this instanceof Trait))return new Trait(e);if(typeof e!="string"||/^[a-z_$]{1}[a-z0-9_$]*$/i.test(e)===!1)throw TypeError("The first argument must be a valid trait name.");this.name=e[0].toUpperCase()+e.slice(1),this.traits=[this.name],this.properties={},this.use=function(t,r){return this.prototype(r?rename(t.properties,r,!0):t.properties),this.traits=this.traits.concat(t.traits),this},this.prototype=function(t){return Object.assign(this.properties,t),this},this.behave=function(t){return this.traits.indexOf(t.name)>-1}}const CreatureContract=Interface("CreatureContract",function(e){e.property("weight",Number).required(),e.method("live",function(t){t.argument("life",Number).required(),t.argument("is").required(),t.returns(String)})}),WarmBloodedCreatureContract=Interface("WarmBloodedCreatureContract").extends(CreatureContract).prototype(function(e){e.property("beatSpeed",Number).required()}),Breathable=Trait("Breathable").prototype({breath(e){console.log("I'm breathing "+e+" times per minute!")}}),UnderwaterBreathable=Trait("UnderwaterBreathable").use(Breathable,{breath:"baseBreath"}).prototype({breathUnderwater(){this.baseBreath(10),console.log("Whoa! I'm breathing underwater. Did you see how coool I am!!")}}),Creature=Type("Creature").prototype({weight:12,beatSpeed:59,live(e,t){return console.log(t,`I have ${e} days to live.`),"3"},foo(){console.log(this,"foo creature")}}),Animal=Type("Animal").extends(Creature).use(UnderwaterBreathable,{breathUnderwater:"breath"}).prototype({walk(){console.log("walking")},foo(){console.log(this,"foo animal"),parent()}}),Human=Type("Human").extends(Animal).prototype({construct({weight:e}){this.weight+=e,this.live(43,!1),this.breath()},talk(){console.log("talking")},foo(){console.log(this,"foo human"),parent()}}),ismail=Human.create({weight:88});console.log({isIsmailBreathable:ismail.behave(Breathable),isIsmailAnimal:ismail.is(Animal),isIsmailSharesCreatureContract:ismail.is(CreatureContract),isHumanTypeAlsoCreature:Human.is(Creature),isUnderwaterBreathableExtendsBreathable:UnderwaterBreathable.behave(Breathable),isCreatureContractWarmBloodedCreatureContract:CreatureContract.is(WarmBloodedCreatureContract),isWarmBloodedCreatureContractCreatureContract:WarmBloodedCreatureContract.is(CreatureContract),isHumanWarmBlooded:Human.is(WarmBloodedCreatureContract)});ismail.foo();
